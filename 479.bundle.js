"use strict";(self.webpackChunk_ibyar_webpack=self.webpackChunk_ibyar_webpack||[]).push([[479],{479:(t,e,a)=>{a.r(e),a.d(e,{AdvancedForm:()=>m,CustomInputElement:()=>r,CustomInputValueControl:()=>i,CustomMessage:()=>l,CustomTextareaComponent:()=>o});var s=a(163),n=a(809);let o=class{constructor(){this.text="",this.disabled=!1,this._onChange=()=>{}}onInit(){setTimeout((()=>this.updateTextarea("test textarea")),2e3)}writeValue({value:t,mode:e}){this.text="reset"!==e?t:"",console.log("textarea write value",t,"and mode",e)}registerOnChange(t){this._onChange=t}setDisabledState(t){this.disabled=t,console.log("textarea disable change",t)}onTextareaChange(t){this._onChange(t),console.log("textarea value change",t)}updateTextarea(t){this.text=t,this.onTextareaChange(t)}};o=(0,s.gn)([(0,n.wA2)({selector:"custom-textarea",extend:"textarea",formAssociated:!0})],o);let l=class{constructor(){this.message="",this.disabled=!1,this._onChange=()=>{}}writeValue({value:t,mode:e}){this.message="reset"!==e?t:"",console.log("message write value",t,"and mode",e)}registerOnChange(t){this._onChange=t}setDisabledState(t){this.disabled=t,console.log("message disable change",t)}onMessageChange(t){this._onChange(t),console.log("message value change",t)}updateMessage(){this.message="test message",this.onMessageChange(this.message)}};(0,s.gn)([(0,n.IIB)("value"),(0,s.w6)("design:type",Object)],l.prototype,"message",void 0),l=(0,s.gn)([(0,n.wA2)({selector:"custom-message",template:'\n\t\t\t<label for="message" class="form-label">Message</label>\n\t\t\t<textarea class="form-control"\n\t\t\t\tid="message"\n\t\t\t\tname="message-textarea"\n\t\t\t\trows="3"\n\t\t\t\t[(value)]="message" \n\t\t\t\t[disabled]="disabled" \n\t\t\t\t(change)="onMessageChange($event.target.value)">\n\t\t\t</textarea>\n\t\t\t<button type="button" class="btn btn-outline-primary m-3" (click)="updateMessage()">Update Message</button>\n\t  \t',formAssociated:!0})],l);class i{constructor(){this._value=null,this._disabled=!1,this._onChange=()=>{},setTimeout((()=>{this._value=666,this._onChange(this._value)}),3e3)}writeValue({value:t,mode:e}){this._value="reset"!==e?t:null,console.log("control write value",t,"and mode",e)}registerOnChange(t){this._onChange=t}setDisabledState(t){this._disabled=t,console.log("control disabled state",t)}}let r=class{constructor(){this.numberValue=99}};(0,s.gn)([(0,n.IIB)("id"),(0,s.w6)("design:type",String)],r.prototype,"elId",void 0),(0,s.gn)([(0,n.IIB)("value"),(0,s.w6)("design:type",Number)],r.prototype,"numberValue",void 0),r=(0,s.gn)([(0,n.wA2)({selector:"custom-input",template:'<input type="number" class="form-control" name="custom-input" [id]="elId" [(value)]="numberValue">',formAssociated:i})],r);let m=class{constructor(){this.model={test:"test",index:5,message:"default message",textArea:"default textarea"},this.data={}}onSubmit(t){t.preventDefault(),console.log("$event",t);const e=new FormData(t.target),a={};e.forEach(((t,e)=>Reflect.set(a,e,t))),this.data=a,console.log("data",this.data)}onFormData(t){console.log("formData",t.formData),t.formData.forEach(((t,e)=>console.log("key",e,"value",t)))}};(0,s.gn)([(0,n.L6J)("submit",["$event"]),(0,s.w6)("design:type",Function),(0,s.w6)("design:paramtypes",[Event]),(0,s.w6)("design:returntype",void 0)],m.prototype,"onSubmit",null),(0,s.gn)([(0,n.L6J)("formdata",["$event"]),(0,s.w6)("design:type",Function),(0,s.w6)("design:paramtypes",[FormDataEvent]),(0,s.w6)("design:returntype",void 0)],m.prototype,"onFormData",null),m=(0,s.gn)([(0,n.wA2)({selector:"custom-form",extend:"form",template:'\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="test" class="form-label">test</label>\n\t\t\t\t<input id="test" name="test" type="text" [(value)]="model.test" />\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="custom-input" class="form-label">Index</label>\n\t\t\t\t<custom-input id="custom-input" name="index" [(value)]="model.index"></custom-input>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<custom-message name="message" [(value)]="model.message"></custom-message>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<label for="custom-textarea" class="form-label">Textarea</label>\n\t\t\t\t<custom-textarea id="custom-textarea" class="form-control" name="textArea" [(value)]="model.textArea"></custom-textarea>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t<button type="submit" class="btn btn-outline-success m-3">Submit</button>\n\t\t\t</div>\n\t\t\t<div class="mb-3">\n\t\t\t\t{{data |> json}}\n\t\t\t</div>\n\t  \t',imports:[o,l,r]})],m)}}]);
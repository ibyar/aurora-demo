"use strict";(self.webpackChunk_ibyar_webpack=self.webpackChunk_ibyar_webpack||[]).push([[327],{327:(t,n,e)=>{e.r(n),e.d(n,{CLASS_EXAMPLE:()=>c,IMPORT_ALL:()=>i,IMPORT_DEFAULT:()=>l,IMPORT_NAMED:()=>a,IMPORT_NAMED_ALIAS:()=>s,PLAY:()=>o});const i="import * as foo from 'mod';",l="import defaultName from 'mod';",a="import {foo, bar} from 'mod';",s="import {default as defaultName, foo as bar} from 'mod';",o="\nlet Y = class YY {\n\tstatic FF = 10;\n\ti = 9;\n\t#j = 'hello';\n\tgetJ(){ \n\t\treturn this.#j + ' world ' + this.constructor.FF;\n\t}\n};\n\nlet y = new Y();\nconsole.log(y.i, y.getJ());\n",c="\nclass ClassWithPublicField {\n\tpublicField = 9;\n}\nconsole.log(new ClassWithPublicField().publicField);\n\n\nclass ClassWithPublicMethod {\n\tpublicMethod() { return 8; }\n}\nconsole.log(new ClassWithPublicMethod().publicMethod());\n\n\nclass ClassWithPrivateField {\n\t#privateField = 99;\n\n\tgetPrivate() {\n\t\treturn this.#privateField;\n\t}\n}\nconsole.log(new ClassWithPrivateField().getPrivate());\n\nclass ClassWithPrivateMethod {\n\t#privateMethod() {\n\t\treturn 'hello world';\n\t}\n\n\tgetPrivate() {\n\t\treturn this.#privateMethod();\n\t}\n}\n\nconsole.log(new ClassWithPrivateMethod().getPrivate());\n\nclass ClassWithPublicStaticField {\n\tstatic PUBLIC_STATIC_FIELD = 77;\n}\n\nconsole.log(ClassWithPublicStaticField.PUBLIC_STATIC_FIELD);\n\n\nclass ClassWithPublicStaticMethod {\n\tstatic publicStaticMethod() { return 88; };\n}\n\nconsole.log(ClassWithPublicStaticMethod.publicStaticMethod());\n\n\nclass ClassWithPrivateStaticField {\n\tstatic #PRIVATE_STATIC_FIELD = 55;\n\n\tstatic getPrivate() {\n\t\treturn this.#PRIVATE_STATIC_FIELD;\n\t}\n}\n\nconsole.log(ClassWithPrivateStaticField.getPrivate());\n\nclass ClassWithPrivateStaticMethod {\n\tstatic #privateStaticMethod() {\n\t\treturn 'hello world';\n\t}\n\n\tstatic getPrivate() {\n\t\treturn this.#privateStaticMethod();\n\t}\n}\nconsole.log(ClassWithPrivateStaticMethod.getPrivate());\n\n\n"}}]);